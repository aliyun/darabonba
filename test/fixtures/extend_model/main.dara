import './util.dara' Util;
import OSS;

model extendFile extends Util.mainFile {
  path: string,
  sub: OSS.File,
  subFiles: [ OSS.SubFile.file ],
  fileMap: map[string]OSS.SubFile.file,
}

model DeriveSubFile extends Util.ExtendSubFile {
  size: string,
}


static function getFile(efile: OSS.File, file: OSS.File, err: OSS.SubFile.file): void;

static function call(size: number): void {
  var file = new Util.mainFile{
    name = 'name',
    size = 100,
  };
  var maps = {
    key = new Util.ExtendSubFileError{
      name = 'name',
      size = 100,
    }
  };
  var efile = new extendFile {
    name = 'name',
    size = 100,
    path = '/test',
    sub = file,
    subFiles = [
      new DeriveSubFile {
        name = 'name',
        size = '100',
      }
    ],
    fileMap = maps
  };
  if(size > file.size) {
    throw new Util.MainFileError{
      name = 'name',
      size = 100,
    };
  } else if (size == file.size){
    throw new Util.ExtendFileError{
      code = 'name',
      size = 100,
    };
  } else {
    var err = new Util.ExtendSubFileError{
      name = 'name',
      size = 100,
    };
    getFile(efile, file, err);
  }
  
}
